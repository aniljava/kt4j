{"name":"KT4J","body":"KT4J is a [Kyoto Tycoon](http://fallabs.com/kyototycoon/) client library for Java.\r\n\r\n- Small\r\n- Thread-safe\r\n- Binary Protocol support\r\n\r\n### Download\r\n\r\n- [kt4j-0.7.0.tar.gz](kt4j-0.7.0.tar.gz)\r\n- [kt4j-0.7.0.zip](kt4j-0.7.0.zip)\r\n\r\n### Usage\r\n\r\nIt's easy to use in your application!\r\n\r\n1. Add **kt4j-x.y.z.jar** and **netty-3.3.x.Final.jar** to the application's CLASSPATH.\r\n2. Create _[kt4j.binary.KyotoTycoonBinaryClient](http://kumai.github.com/kt4j/javadocs/kt4j/binary/KyotoTycoonBinaryClient.html)_ and call start() of the instance in your application.\r\n3. Call various Kyoto Tycoon's procedures. (see _[kt4j.KyotoTycoonClient](http://kumai.github.com/kt4j/javadocs/kt4j/KyotoTycoonClient.html)_) \r\n\r\nex:\r\n\r\n    import kt4j.binary.KyotoTycoonBinaryClient;\r\n    \r\n    public class Example {\r\n      public static void main(String[] args) {\r\n        KyotoTycoonBinaryClient client = new KyotoTycoonBinaryClient(\"kyoto_tycoon_host\", 1978);\r\n        client.start();\r\n            \r\n        client.set(\"KEY\", \"VALUE\");\r\n        String v = client.get(\"KEY\");\r\n        System.out.println(v);  // => \"VALUE\"\r\n            \r\n        client.stop();\r\n      }\r\n    }\r\n\r\n### Requirements\r\n\r\nThe minimum requirements to run the application using KT4J are only three:\r\n\r\n* JDK 6 or above\r\n* the latest version of KT4J\r\n* [Netty](http://netty.io/) (netty-3.3.x.Final.jar)\r\n","tagline":"Kyoto Tycoon client for Java","google":"UA-30790027-1","note":"Don't delete this file! It's used internally to help with page regeneration."}